#!/bin/sh

heading () {
  echo "\n$(tput setaf 6)$1$(tput sgr0)"
}

heading "Upgrading system packages ..."
sudo apt update
sudo apt upgrade -y

heading "Installing essential packages ..."
sudo apt install -y bash-completion build-essential curl git inotify-tools unzip wget

if [ ! -x "$(command -v gh)" ]; then
  heading "Installing gh ..."
  sudo apt-key adv --keyserver hkp://keyserver.ubuntu.com:80 --recv-key C99B11DEB97541F0
  sudo apt-add-repository https://cli.github.com/packages
  sudo apt update
  sudo apt install gh
fi

heading "Installing databases ..."
sudo apt install -y sqlite3 libsqlite3-dev
sudo apt install -y postgresql libpq-dev

heading "Installing Node.js ..."
if [ ! -f "/etc/apt/sources.list.d/nodesource.list" ]; then
  curl -sL https://deb.nodesource.com/setup_lts.x | sudo -E bash -
fi
sudo apt install -y nodejs

heading "Installing yarn ..."
if [ ! -f "/etc/apt/sources.list.d/yarn.list" ]; then
  curl -sL https://dl.yarnpkg.com/debian/pubkey.gpg | sudo apt-key add -
  echo "deb https://dl.yarnpkg.com/debian/ stable main" | sudo tee /etc/apt/sources.list.d/yarn.list
  sudo apt update
fi
sudo apt install -y yarn

heading "Installing Erlang and Elixir ..."
if [ ! -f "/etc/apt/sources.list.d/erlang-solutions.list" ]; then
  wget https://packages.erlang-solutions.com/erlang-solutions_2.0_all.deb
  sudo dpkg -i erlang-solutions_2.0_all.deb
  rm erlang-solutions_2.0_all.deb
  sudo apt update
fi
sudo apt install -y esl-erlang elixir
mix local.hex --force --if-missing
if [ ! -f "$HOME/.mix/rebar3" ]; then
  mix local.rebar --force
fi

if [ ! -d "$HOME/.elixir-ls" ]; then
  heading "Installing ElixirLS ..."
  wget https://github.com/elixir-lsp/elixir-ls/releases/download/v0.7.0/elixir-ls-1.11.zip
  unzip elixir-ls-1.11.zip -d ~/.elixir-ls
  rm elixir-ls-1.11.zip
fi

if ! mix local | grep -q credo; then
  heading "Installing credo ..."
  mix archive.install hex bunt --force
  mix archive.install hex credo --force
fi

if ! mix local | grep -q phx.new; then
  heading "Installing phx_new ..."
  mix archive.install hex phx_new --force
fi

heading "Installing Doom Emacs ..."
sudo apt install -y emacs fd-find ripgrep
if [ ! -d "$HOME/.emacs.d" ]; then
  git clone --depth 1 https://github.com/hlissner/doom-emacs ~/.emacs.d
fi
if [ ! -d "$HOME/.doom.d" ]; then
  ~/.emacs.d/bin/doom install
fi

heading "To set a password for postgres run the following command:"
echo "\t" "sudo -u postgres psql -c '\password'"
